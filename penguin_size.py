# -*- coding: utf-8 -*-
"""Penguin Size.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HCgxPz2xnFW_UkLOXj9sO_w36_R9OzzN

# **DATA IMPORTATION**
"""

# First let's import the packages we will use in this project

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Now we need to read in the data

from google.colab import files
uploaded = files.upload()

import io
df = pd.read_csv(io.BytesIO(uploaded['penguin size (5).csv']))

# Now let's take a look at the data

df.head()

# To check for the number of rows and columns

df.shape

df.describe()

df.info()

"""# **DATA CLEANING**"""

# We need to see if we have any missing data
# Let's loop through the data and see if there is anything missing

for col in df.columns:
    pct_missing = np.mean(df[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100)))

# We need to see if we have any missing data
#we will use .null to find the missing values

print (df.isnull().sum())

## dropping columns that have null values

df.dropna(inplace=True)

# lets check for Null values again to see if changes have been effected

print (df.isnull().sum())

# check for column Data Types

print(df.dtypes)

#change datatype
# for flipper_length_mm column and body_mass_g column
#convert from float to int

df ['flipper_length_mm'] = df ['flipper_length_mm'].astype(int)
df ['body_mass_g'] = df ['body_mass_g'].astype(int)

# lets check for column Data Types again to see if changes have been effected

print(df.dtypes)

df.head()

# Order our Data a little bit to see

df.sort_values(by=['species'], inplace=False, ascending=False)

"""# **EXPORATORY DATA ANALYSIS (EDA)**"""

# Correlation Matrix between all numeric columns

df.corr(method ='pearson')

df.corr(method ='spearman')

correlation_matrix = df.corr(method ='pearson')

sns.heatmap(correlation_matrix, annot = True)

plt.title("Correlation matrix for Penguins Size")

plt.xlabel("Penguins Size")

plt.ylabel("Penguins Size")

plt.show()

correlation_matrix_spearman = df.corr(method ='spearman')

sns.heatmap(correlation_matrix_spearman, annot = True)

plt.title("Correlation matrix for Penguins Size")

plt.xlabel("Penguins Size")

plt.ylabel("Penguins Size")

plt.show()

# Your code to create the bar plot
df['island'].value_counts().plot(kind='bar', color=['#E3B448', '#CBD18F', '#3A6B35'])
plt.title('Count of island')
plt.xlabel('islands')

# Adding data labels
counts = df['island'].value_counts()
for i, count in enumerate(counts):
    plt.text(i, count + 1, str(count), ha='center', va='bottom')

plt.show()

# Your code to create the bar plot

df['species'].value_counts().plot(kind='bar',color=['#E3B448','#CBD18F','#3A6B35'])
plt.title ('Count of Species')
plt.xlabel('species')

# Adding data labels
counts = df['species'].value_counts()
for i, count in enumerate(counts):
    plt.text(i, count + 1, str(count), ha='center', va='bottom')

plt.show()

# Create scatter matrix
pd.plotting.scatter_matrix(df, alpha=0.8, figsize=(10, 8), diagonal='hist')
plt.show()

# Create scatter plot using Seaborn
sns.set(style='ticks')
scatter_plot = sns.pairplot(df, kind='scatter', diag_kind='hist')

plt.show()